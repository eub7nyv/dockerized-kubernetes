#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: "3.7"

x-ba: &build-args
  args:
    KUBECTL_TAG: ${K8_VERSION}
    K8_VERSION: ${K8_VERSION}
    ETCD_VERSION: ${ETCD_VERSION}
x-da: &depends-on-apiserver
  depends_on: ["kubectl", "etcd", "kube-apiserver"]
  restart: always
x-dofk: &depends-on-for-kubelet
  depends_on:
    [
      "kubectl",
      "etcd",
      "kube-apiserver",
      "kube-controller-manager",
      "kube-scheduler",
    ]
  restart: always
x-lr: &do-leave-running
  stdin_open: true
  tty: true
  restart: always

services:
  # Base image that the rest of this depends on
  kubectl:
    build:
      context: ./kubectl
      args:
        K8_VERSION: ${K8_VERSION}
        CFSSL_VERSION: ${CFSSL_VERSION}
    image: "kubectl:${K8_VERSION}"
    <<: *do-leave-running
    networks:
      k8:
        ipv4_address: 172.18.6.50
  # Build out etcd from the kubectl
  etcd:
    build:
      context: ./etcd
      <<: *build-args
    image: "k8-etcd:${ETCD_VERSION}"
    depends_on: ["kubectl"]
    restart: always
    ports:
      - 2379:2379
    networks:
      k8:
        ipv4_address: 172.18.6.90
  # Typically this (api-server) and the controller-manager/scheduler are deployed together, but...
  # DOCKER!
  kube-apiserver:
    build:
      context: ./kube-apiserver
      <<: *build-args
    image: "k8-apiserver:${K8_VERSION}"
    depends_on: ["kubectl", "etcd"]
    restart: always
    ports:
      - 6443:6443
    networks:
      k8:
        ipv4_address: 172.18.6.100
  # Typically this (controller-manager) and the scheduler/api-server are deployed together, but...
  # DOCKER!
  kube-controller-manager:
    build:
      context: ./kube-controller-manager
      <<: *build-args
    image: "k8-controller-manager:${K8_VERSION}"
    <<: *depends-on-apiserver
    ports:
      - 10252:10252
      - 10257:10257
    networks:
      k8:
        ipv4_address: 172.18.6.110
  # Typically this (scheduler) and the controller-manager/api-server are deployed together, but...
  # DOCKER!
  kube-scheduler:
    build:
      context: ./kube-scheduler
      <<: *build-args
    image: "k8-scheduler:${K8_VERSION}"
    <<: *depends-on-apiserver
    ports:
      - 10251:10251
      - 10259:10259
    networks:
      k8:
        ipv4_address: 172.18.6.120
  # We want three nodes... 1/3
  kubelet_0:
    build:
      context: ./kubelet
      <<: *build-args
    image: k8-kubelet:${K8_VERSION}
    <<: *depends-on-for-kubelet
    networks:
      k8:
        ipv4_address: 172.18.6.180
  # We want three nodes... 2/3
  kubelet_1:
    image: k8-kubelet:${K8_VERSION}
    <<: *depends-on-for-kubelet
    networks:
      k8:
        ipv4_address: 172.18.6.181
  # We want three nodes... 3/3
  kubelet_2:
    image: k8-kubelet:${K8_VERSION}
    <<: *depends-on-for-kubelet
    networks:
      k8:
        ipv4_address: 172.18.6.182

networks:
  k8:
    ipam:
      driver: default
      config:
        - subnet: "172.18.0.0/20"
